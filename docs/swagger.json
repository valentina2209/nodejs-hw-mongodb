{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Contact Book API",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a REST API for managing user contacts. Supports authentication via JWT."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://contacts-app-v182.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "contacts",
      "description": "Contact operations"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Login a user using email and password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "valya253@ukr.net"
                  },
                  "password": {
                    "type": "string",
                    "example": "SecureP@ssw0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in a user",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "accessToken"
                      ],
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "x7iCqxF7SxGJZcAZxMjOGWietzedJ1WOhYLHxJCJ"
                        }
                      }
                    }
                  }
                },
                "example": {
                  "status": 200,
                  "message": "Successfully logged in an user!",
                  "data": {
                    "accessToken": "x7iCqxF7SxGJZcAZxMjOGWietzedJ1WOhYLHxJCJ"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/userRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "example": "Jane Doe"
                        },
                        "email": {
                          "type": "string",
                          "example": "jane@example.com"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email already in use"
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Retrieve all user's contacts",
        "operationId": "getAllContacts",
        "description": "Returns a list of the current user's contacts with pagination, filtering and sorting.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number (default is 1)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "example": 2
            }
          },
          {
            "name": "perPage",
            "in": "query",
            "description": "Number of contacts per page (default is 20)",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "example": 4
            }
          },
          {
            "name": "isFavourite",
            "in": "query",
            "description": "Filter by favorite contacts",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": false
            }
          },
          {
            "name": "contactType",
            "in": "query",
            "description": "Filter by contact type",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "work",
                "home",
                "personal"
              ],
              "example": "work"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Field by which to sort the results",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "_id",
                "name",
                "phoneNumber",
                "email",
                "isFavourite",
                "contactType",
                "createdAt",
                "updatedAt"
              ],
              "example": "name"
            }
          },
          {
            "name": "sortOrder",
            "in": "query",
            "description": "Sorting order",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "example": "asc"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of contacts with pagination",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contacts!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "data": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/contact"
                          }
                        },
                        "page": {
                          "type": "integer",
                          "example": 2
                        },
                        "perPage": {
                          "type": "integer",
                          "example": 4
                        },
                        "totalItems": {
                          "type": "integer",
                          "example": 6
                        },
                        "totalPages": {
                          "type": "integer",
                          "example": 2
                        },
                        "hasPreviousPage": {
                          "type": "boolean",
                          "example": true
                        },
                        "hasNextPage": {
                          "type": "boolean",
                          "example": false
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "application/json": {
                    "value": {
                      "status": 200,
                      "message": "Successfully found contacts!",
                      "data": {
                        "data": [
                          {
                            "_id": "68931e61826cf1f456ab5a56",
                            "name": "Sony",
                            "phoneNumber": "+380991234567",
                            "email": "valya253@ukr.net",
                            "isFavourite": false,
                            "photo": "https://res.cloudinary.com/yourimage.jpg",
                            "contactType": "work",
                            "userId": "688a9079573cb187469ab551",
                            "createdAt": "2025-08-06T09:20:33.923Z",
                            "updatedAt": "2025-08-06T09:20:33.923Z"
                          }
                        ],
                        "page": 2,
                        "perPage": 4,
                        "totalItems": 6,
                        "totalPages": 2,
                        "hasPreviousPage": true,
                        "hasNextPage": false
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "post": {
        "tags": [
          "Contacts"
        ],
        "summary": "Create a new contact",
        "operationId": "createContact",
        "description": "Adds a new contact to the current user's contact list.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Sony"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+380991234567"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "work"
                  },
                  "email": {
                    "type": "string",
                    "example": "valya253@ukr.net"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": false
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Contact successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully created a contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": 201,
                      "message": "Successfully created a contact!",
                      "data": {
                        "_id": "68931e61826cf1f456ab5a56",
                        "name": "Sony",
                        "phoneNumber": "+380991234567",
                        "email": "valya253@ukr.net",
                        "isFavourite": false,
                        "photo": "https://res.cloudinary.com/dpqbqq1jp/image/upload/v1754471928/oc5zdq9dk9i1ylgi9tjw.jpg",
                        "contactType": "work",
                        "userId": "688a9079573cb187469ab551",
                        "createdAt": "2025-08-06T09:20:33.923Z",
                        "updatedAt": "2025-08-06T09:20:33.923Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/contacts/{contactId}": {
      "get": {
        "tags": [
          "Contacts"
        ],
        "summary": "Get a contact by ID",
        "operationId": "getContactById",
        "description": "Retrieves a specific contact by its ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "schema": {
              "type": "string",
              "example": "68931e61826cf1f456ab5a56"
            },
            "description": "The ID of the contact to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact successfully retrieved",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "$ref": "#/components/responses/404"
          }
        }
      },
      "patch": {
        "tags": [
          "Contacts"
        ],
        "summary": "Update an existing contact",
        "operationId": "updateContact",
        "description": "Updates a contact by ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "required": true,
            "description": "The ID of the contact to update",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Alice Johnson"
                  },
                  "phoneNumber": {
                    "type": "string",
                    "example": "+380991234567"
                  },
                  "contactType": {
                    "type": "string",
                    "enum": [
                      "work",
                      "home",
                      "personal"
                    ],
                    "example": "personal"
                  },
                  "email": {
                    "type": "string",
                    "example": "alice@example.com"
                  },
                  "isFavourite": {
                    "type": "boolean",
                    "example": true
                  },
                  "photo": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "required": [
                  "name",
                  "phoneNumber",
                  "contactType"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Contact updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated contact!"
                    },
                    "data": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                },
                "examples": {
                  "success": {
                    "value": {
                      "status": 200,
                      "message": "Successfully updated contact!",
                      "data": {
                        "_id": "68931e61826cf1f456ab5a56",
                        "name": "Alice Johnson",
                        "phoneNumber": "+380991234567",
                        "email": "alice@example.com",
                        "isFavourite": true,
                        "photo": "https://res.cloudinary.com/yourimage.jpg",
                        "contactType": "personal",
                        "userId": "688a9079573cb187469ab551",
                        "createdAt": "2025-08-06T09:20:33.923Z",
                        "updatedAt": "2025-08-06T10:00:00.123Z"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "$ref": "#/components/responses/404"
          }
        }
      },
      "delete": {
        "tags": [
          "Contacts"
        ],
        "summary": "Delete a contact",
        "operationId": "deleteContact",
        "description": "Deletes a contact by its ID.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "contactId",
            "required": true,
            "description": "ID of the contact to delete",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Contact successfully deleted. No content returned."
          },
          "401": {
            "description": "Unauthorized",
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Contact not found",
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "userRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "contact": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "phoneNumber",
          "contactType",
          "userId"
        ],
        "properties": {
          "_id": {
            "description": "Contact's unique identifier",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Full name of the contact",
            "type": "string",
            "example": "Alice Johnson"
          },
          "phoneNumber": {
            "description": "Primary phone number of the contact",
            "type": "string",
            "example": "+380631234567"
          },
          "email": {
            "description": "Email address of the contact",
            "type": "string",
            "example": "alice.johnson@example.com"
          },
          "isFavourite": {
            "description": "Whether the contact is marked as favourite",
            "type": "boolean",
            "example": true
          },
          "photo": {
            "description": "URL to the contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/demo/image/upload/v123456789/photo.jpg"
          },
          "contactType": {
            "description": "Type of contact",
            "type": "string",
            "enum": [
              "work",
              "home",
              "personal"
            ],
            "example": "personal"
          },
          "userId": {
            "description": "ID of the user who owns this contact",
            "type": "string",
            "example": "65d3a8d2e0f3c2001eabb832"
          },
          "createdAt": {
            "description": "Timestamp of contact creation",
            "type": "string",
            "format": "date-time",
            "example": "2025-08-04T10:45:00.000Z"
          },
          "updatedAt": {
            "description": "Timestamp of last contact update",
            "type": "string",
            "format": "date-time",
            "example": "2025-08-04T12:00:00.000Z"
          }
        }
      }
    },
    "responses": {
      "200": {
        "description": "Successful operation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Success"
                },
                "data": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "201": {
        "description": "Contact successfully created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Contact created"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "contact"
                  ],
                  "properties": {
                    "contact": {
                      "$ref": "#/components/schemas/contact"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "code": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "Not authorized"
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "fail"
                },
                "code": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "Resource not found"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    }
  }
}